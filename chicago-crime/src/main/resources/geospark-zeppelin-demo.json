{"paragraphs":[{"text":"%spark.conf\nspark.jars.packages org.apache.hadoop:hadoop-aws:2.7.3,com.amazonaws:aws-java-sdk:1.7.4,org.datasyslab:geospark:1.2.0,org.datasyslab:geospark-viz_2.3:1.2.0,org.datasyslab:geospark-sql_2.3:1.2.0,org.datasyslab:sernetcdf:0.1.0\nspark.executor.instances 1\nspark.hadoop.fs.s3a.impl org.apache.hadoop.fs.s3a.S3AFileSystem \nspark.hadoop.fs.s3a.access.key aws_access_key_id\nspark.hadoop.fs.s3a.secret.key aws_secret_access_key\nzeppelin.spark.sql.stacktrace true","user":"anonymous","dateUpdated":"2019-08-05T23:32:17+0000","config":{"editorSetting":{"language":"text","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/text","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1565046469225_-513292007","id":"paragraph_1564447131174_399817610","dateCreated":"2019-08-05T23:07:49+0000","dateStarted":"2019-08-05T23:27:12+0000","dateFinished":"2019-08-05T23:27:12+0000","status":"FINISHED","focus":true,"$$hashKey":"object:5098"},{"text":"%spark\nimport org.datasyslab.geosparkviz.sql.utils.GeoSparkVizRegistrator\nimport org.datasyslab.geosparksql.utils.GeoSparkSQLRegistrator\n\n// // Zeppelin creates and injects sc (SparkContext) and sqlContext (HiveContext or SqlContext)\n// // So you don't need create them manually\n\nGeoSparkSQLRegistrator.registerAll(spark)\nGeoSparkVizRegistrator.registerAll(spark)\n\nvar pointdf = spark.read.format(\"csv\")\n  .option(\"delimiter\", \",\")\n  .option(\"header\", \"false\")\n  .load(\"s3a://spark-playground-datasets/arealm.csv\")\n\npointdf.show()\npointdf.registerTempTable(\"pointtable\")\nspark.sql(\n  \"\"\"\n    |CREATE OR REPLACE TEMP VIEW pointtable AS\n    |SELECT ST_Point(cast(pointtable._c0 as Decimal(24,20)),cast(pointtable._c1 as Decimal(24,20))) as shape\n    |FROM pointtable\n  \"\"\".stripMargin)\nspark.sql(\n  \"\"\"\n    |CREATE OR REPLACE TEMP VIEW pointtable AS\n    |SELECT *\n    |FROM pointtable\n    |WHERE ST_Contains(ST_PolygonFromEnvelope(-126.790180,24.863836,-64.630926,50.000),shape)\n  \"\"\".stripMargin)\nspark.sql(\n  \"\"\"\n    |CREATE OR REPLACE TEMP VIEW boundtable AS\n    |SELECT ST_Envelope_Aggr(shape) as bound FROM pointtable\n  \"\"\".stripMargin)\nspark.sql(\n  \"\"\"\n    |CREATE OR REPLACE TEMP VIEW pixels AS\n    |SELECT pixel, shape FROM pointtable\n    |LATERAL VIEW ST_Pixelize(ST_Transform(shape, 'epsg:4326','epsg:3857'), 256, 256, (SELECT ST_Transform(bound, 'epsg:4326','epsg:3857') FROM boundtable)) AS pixel\n  \"\"\".stripMargin)\nspark.sql(\n  \"\"\"\n    |CREATE OR REPLACE TEMP VIEW pixelaggregates AS\n    |SELECT pixel, count(*) as weight\n    |FROM pixels\n    |GROUP BY pixel\n  \"\"\".stripMargin)\nspark.sql(\n  \"\"\"\n    |CREATE OR REPLACE TEMP VIEW images AS\n    |SELECT ST_EncodeImage(ST_Render(pixel, ST_Colorize(weight, (SELECT max(weight) FROM pixelaggregates)))) AS image, (SELECT ST_AsText(bound) FROM boundtable) AS boundary\n    |FROM pixelaggregates\n  \"\"\".stripMargin)\nspark.table(\"images\").show()\nspark.sql(\n  \"\"\"\n    |CREATE OR REPLACE TEMP VIEW wktpoint AS\n    |SELECT ST_AsText(shape) as geom\n    |FROM pointtable\n  \"\"\".stripMargin)","user":"anonymous","dateUpdated":"2019-08-05T23:27:15+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\u001b[33mwarning: \u001b[0mthere was one deprecation warning; re-run with -deprecation for details\n+----------+---------+\n|       _c0|      _c1|\n+----------+---------+\n|-88.331492|32.324142|\n|-88.175933|32.360763|\n|-88.388954|32.357073|\n|-88.221102| 32.35078|\n|-88.323995|32.950671|\n|-88.231077|32.700812|\n|-88.349276|32.548266|\n|-88.304259|32.488903|\n|-88.182481| 32.59966|\n|-86.955186|32.617088|\n|-87.059169|32.378484|\n|-87.251219|32.052598|\n|-87.534883|31.934442|\n| -87.49702|31.894541|\n|-88.280149|33.325473|\n|-88.153618|33.261297|\n|-86.988768|31.866884|\n|-87.586341|31.959751|\n| -87.40708|31.887472|\n| -87.43091|31.901283|\n+----------+---------+\nonly showing top 20 rows\n\n+--------------------+--------------------+\n|               image|            boundary|\n+--------------------+--------------------+\n|iVBORw0KGgoAAAANS...|POLYGON ((-124.74...|\n+--------------------+--------------------+\n\nimport org.datasyslab.geosparkviz.sql.utils.GeoSparkVizRegistrator\nimport org.datasyslab.geosparksql.utils.GeoSparkSQLRegistrator\n\u001b[1m\u001b[34mpointdf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [_c0: string, _c1: string]\n\u001b[1m\u001b[34mres1\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = []\n"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1565046469232_-1838717481","id":"20190227-203333_1886473378","dateCreated":"2019-08-05T23:07:49+0000","dateStarted":"2019-08-05T23:27:15+0000","dateFinished":"2019-08-05T23:30:17+0000","status":"FINISHED","$$hashKey":"object:5099"},{"text":"%spark.sql\nSELECT *\nFROM wktpoint\nLIMIT 10","user":"anonymous","dateUpdated":"2019-08-05T23:30:45+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{"0":{"graph":{"mode":"geospark-zeppelin","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"geom":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"geospark-zeppelin":{"geometry":{"name":"geom","index":0,"aggr":"sum"},"info":{"name":"geom","index":0,"aggr":"sum"}}}},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"geom\nPOINT (-88.331492 32.324142)\nPOINT (-88.175933 32.360763)\nPOINT (-88.388954 32.357073)\nPOINT (-88.221102 32.35078)\nPOINT (-88.323995 32.950671)\nPOINT (-88.231077 32.700812)\nPOINT (-88.349276 32.548266)\nPOINT (-88.304259 32.488903)\nPOINT (-88.182481 32.59966)\nPOINT (-86.955186 32.617088)\n"},{"type":"TEXT","data":""}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1565046469234_-962864003","id":"20190227-203351_1519829707","dateCreated":"2019-08-05T23:07:49+0000","dateStarted":"2019-08-05T23:30:45+0000","dateFinished":"2019-08-05T23:30:46+0000","status":"FINISHED","$$hashKey":"object:5100"},{"text":"%sql\nSELECT *, 'I am the map center!'\nFROM images","user":"anonymous","dateUpdated":"2019-08-05T23:18:10+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"runOnSelectionChange":true,"title":false,"checkEmpty":true,"results":{"0":{"graph":{"mode":"geospark-zeppelin","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{"columns":[{"name":"st_encodeimage(image)","visible":true,"width":"*","sort":{"priority":0,"direction":"asc"},"filters":[{}],"pinned":""},{"name":"1.0","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""}],"scrollFocus":{},"selection":[],"grouping":{"grouping":[],"aggregations":[],"rowExpandedStates":{}},"treeView":{},"pagination":{"paginationCurrentPage":1,"paginationPageSize":250}},"tableColumnTypeState":{"names":{"image":"string","boundary":"string","I am the map center!":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"zeppelin-leaflet":{},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"geospark-zeppelin":{"geometry":{"name":"boundary","index":1,"aggr":"sum"},"info":{"name":"I am the map center!","index":2,"aggr":"sum"},"mapimage":{"name":"image","index":0,"aggr":"sum"}}},"keys":[],"groups":[],"values":[],"commonSetting":{}},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"image\tboundary\tI am the map center!\\tPOLYGON ((-124.742775 24.95862, -124.742775 49.367211, -66.984485 49.367211, -66.984485 24.95862, -124.742775 24.95862))\tI am the map center!\n"},{"type":"TEXT","data":""}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1565046469238_-2141863506","id":"20190227-203400_1171762279","dateCreated":"2019-08-05T23:07:49+0000","dateStarted":"2019-08-05T23:18:10+0000","dateFinished":"2019-08-05T23:19:19+0000","status":"FINISHED","$$hashKey":"object:5101"}],"name":"geospark-zeppelin-demo","id":"2EH2CP83V","defaultInterpreterGroup":"spark","version":"0.9.0-SNAPSHOT","permissions":{},"noteParams":{},"noteForms":{},"angularObjects":{},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{},"path":"/geospark-zeppelin-demo"}